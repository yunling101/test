name: Release

on:
  push:
    tags:
      - '*'
    #  - 'v*'
    #branches:
    #  - master

#defaults:
#  run:
#    shell: bash

permissions:
  contents: write
#  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
        #goos: [linux, windows, darwin]
        #goarch: ["386", amd64, arm64]
        #exclude:
        #  - goarch: "386"
        #    goos: darwin
        #  - goarch: arm64
        #    goos: windows
    #    goos: [darwin]
    #    goarch: [amd64]
    steps:
      - name: Check Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version
        id: generate_tag
        run: echo "version=$(cat ./VERSION)" >> $GITHUB_OUTPUT

      - name: Get Tag
        id: get_tag
        # echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

        #run: |
        #  version=$(cat ./VERSION)
        #  echo "VERSION=$version"
        #  echo "version=$version" >> $GITHUB_ENV
        #  echo "version=$version" >> $GITHUB_OUTPUT
     
      #- name: Build
      #  run: echo ${{ github.sha }} > Release.txt

      #- name: Test
      #  run: cat Release.txt

      - name: Print
        run: |
           #echo "The version is ${{ env.version }}"
           echo "${{ steps.generate_tag.outputs.version }}"
           echo "${{ github.event.release.tag_name }}"
           env
           tar --version
           zip -v

      #- name: Zip the Build
      #  run: zip -r x.zip ./deploy

      #- name: Go Binary
      #  uses: wangyoucao577/go-release-action@v1
      #  with:
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    goos: ${{ matrix.goos }}
      #    goarch: ${{ matrix.goarch }}
      #    project_path: "."
      #    release_name: "v0.8"
      #    goversion: "https://go.dev/dl/go1.21.9.linux-amd64.tar.gz"
          #binary_name: "test-binary"
          #extra_files: LICENSE README.md
      #    asset_name: "main-${{steps.get_tag.outputs.RELEASE_VERSION}}-${{ matrix.goos }}-${{ matrix.goarch }}"
      #    overwrite: TRUE
      #    compress_assets: OFF

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          go-version: '1.21.9'
          cache: true
      - run: go version
      - run: go run main.go
      #- run: go build -o main
      - run: ls -lah

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: latest
          distribution: goreleaser
          args: release --clean 

      #- name: Create Release
      #  uses: softprops/action-gh-release@v2
      #  if: startsWith(github.ref, 'refs/tags/')
      #  with:
        #  files: |
        #    x.zip
        #    Release.txt
        #    LICENSE
        #with:
        #  tag_name: ${{ steps.generate_tag.outputs.version }}
        #  name: Release ${{ steps.generate_tag.outputs.version }}

      #- name: Create Release
        #uses: actions/create-release@v1
      #  uses: release-drafter/release-drafter@v6
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    name: Release ${{ steps.generate_tag.outputs.version }}
          #tag_name: ${{ env.version }}
          #release_name: Release ${{ steps.generate_tag.outputs.version }}
          #body: |
          #  Changes in this Release
          #  - First Change
          #  - Second Change
          #draft: false
          #prerelease: false
